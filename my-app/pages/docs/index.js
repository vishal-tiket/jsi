import Head from "next/head";
import { useEffect, useState } from "react";
import Image from "next/image";
import Link from "next/link";
import styles from "../../styles/Home.module.css";

export default function Home() {
  const [isLoading, setIsLoading] = useState(false);
  const [showContent, setShowContent] = useState(false);
  const [showHeader, setShowHeader] = useState(false);

  const callback = (event) => {
    setShowHeader(true);
    setIsLoading(true);
    function apiSimulation() {
      setTimeout(() => {
        setIsLoading(false);
        setShowContent(true);
        setShowHeader(false);
      }, 2000);
    }

    apiSimulation();
  };

  useEffect(() => {
    // window?.webkit?.messageHandlers?.callNativeJSI?.postMessage(
    //   JSON.stringify({ command: "hideNavbar" })
    // );
    // window?.generic?.callGenericNativeJSI(
    //   JSON.stringify({ command: "hideNavbar" })
    // );

    // window.addEventListener("nativeJSICallback", callback);

    // setTimeout(() => {
    //   setShowHeader(true);
    // }, [20]);

    // setTimeout(() => {
    //   setIsLoading(true);
    // }, [100]);

    // function apiSimulation() {
    //   setTimeout(() => {
    //     setIsLoading(false);
    //     setShowContent(true);
    //     setShowHeader(false);
    //   }, 2000);
    // }

    // apiSimulation();

    setShowContent(true);

    return () => {
      //   window.removeEventListener("nativeJSICallback", callback);
    };
  }, []);

  if (showContent || showHeader) {
    return (
      <div className={styles.container} style={{ background: "#000" }}>
        <Head>
          <title>Webview - JSI POC</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, viewport-fit=cover"
          />
        </Head>

        {showHeader ? (
          <>
            <div className={styles.safe_area}></div>
            <div className={styles.header}>
              <Link className={styles.backButton} href="/">{`<`}</Link>
              <span>Docs Page</span>
            </div>
            {!!isLoading && (
              <div
                style={{
                  width: "100%",
                  height: "100vh",
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                  color: "white",
                }}
              >
                Loading ...
              </div>
            )}
          </>
        ) : (
          <>
            <main className={styles.main}>
              <div className={styles.safe_area}></div>
              <div className={styles.header}>
                <Link className={styles.backButton} href="/">{`<`}</Link>
                <span>Docs Page</span>
              </div>
              <h1 className={styles.title} style={{ color: "white" }}>
                Welcome to <a href="https://nextjs.org">Next.JS</a>
              </h1>

              <p className={styles.description} style={{ color: "white" }}></p>
            </main>

            <footer className={styles.footer}>
              <a
                href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                target="_blank"
                rel="noopener noreferrer"
              >
                Powered by{" "}
                <span className={styles.logo}>
                  <Image
                    src="/vercel.svg"
                    alt="Vercel Logo"
                    width={72}
                    height={16}
                  />
                </span>
              </a>
            </footer>
          </>
        )}
      </div>
    );
  }

  return <></>;
}
